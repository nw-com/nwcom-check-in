rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // 角色判斷輔助函式
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    // 補打申請審核角色：管理員、人事、高階主管
    function isReviewer() {
      return (
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'hr' ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'manager'
      );
    }
    // 全域預設：允許所有已登入用戶讀取，但不允許任意寫入
    // 具體集合的寫入權限在下方細則中分別定義
    match /{document=**} {
      allow read: if request.auth != null;
      allow write: if false;
    }
    
    // 為了讓儀表板能顯示所有員工的狀態，允許所有登入的使用者讀取所有人的基本資料。
    // 使用者仍然只能更新自己的個人資料，但管理員可以更新所有用戶資料。
    match /users/{userId} {
      allow read: if request.auth != null;
      // 管理員可更新任意欄位；一般使用者僅能更新安全欄位
      allow update: if isAdmin() || (
        request.auth.uid == userId &&
        request.resource.data.diff(resource.data).changedKeys().hasOnly([
          'name',
          'avatarUrl',
          'clockInStatus',
          'outboundLocation',
          'dutyType',
          'leaveReason',
          'leaveStatus',
          'status',
          'lastUpdated',
          'firstClockInDeviceId'
        ])
      );
      // 只有管理員可以建立或刪除使用者文件
      allow create, delete: if isAdmin();
    }
    
    // 允許所有登入的使用者讀取所有人的打卡紀錄。
    // 注意：Firestore 的讀取權限是針對整個文件，無法只開放部分欄位。
    // 使用者仍然只能為自己建立打卡紀錄。
    match /clockInRecords/{recordId} {
      // 本人可建立；管理員可代建。並限制欄位與型別以提高安全性
      allow create: if (
        request.auth.uid == request.resource.data.userId || isReviewer()
      ) &&
      request.resource.data.keys().hasOnly([
        'userId','type','timestamp','location','photoUrls','descriptions','deviceId','locationName','dutyType','isAutomatic'
      ]) &&
      request.resource.data.type in ['上班','下班','外出','返回','抵達','離開','自動下班'] &&
      request.resource.data.timestamp is timestamp &&
      request.resource.data.location is latlng &&
      request.resource.data.photoUrls is list &&
      request.resource.data.descriptions is list &&
      (request.resource.data.isAutomatic == null || request.resource.data.isAutomatic is bool) &&
      request.resource.data.photoUrls.size() <= 3 &&
      request.resource.data.descriptions.size() == request.resource.data.photoUrls.size();

      allow read: if request.auth != null;
      // 僅管理員可更新或刪除打卡紀錄，並限制可更新欄位與型別
      allow update: if isAdmin() &&
        request.resource.data.keys().hasOnly([
          'userId','type','timestamp','location','photoUrls','descriptions','deviceId','locationName','dutyType','isAutomatic'
        ]) &&
        request.resource.data.type in ['上班','下班','外出','返回','抵達','離開','自動下班'] &&
        request.resource.data.timestamp is timestamp &&
        (request.resource.data.location == null || request.resource.data.location is latlng) &&
        (request.resource.data.photoUrls == null || request.resource.data.photoUrls is list) &&
        (request.resource.data.descriptions == null || request.resource.data.descriptions is list) &&
        (request.resource.data.isAutomatic == null || request.resource.data.isAutomatic is bool) &&
        (request.resource.data.photoUrls == null || request.resource.data.photoUrls.size() <= 3) &&
        (request.resource.data.descriptions == null || request.resource.data.descriptions.size() == (request.resource.data.photoUrls == null ? resource.data.photoUrls.size() : request.resource.data.photoUrls.size()));

      allow delete: if isAdmin();
    }
    
    // 只有管理員可以讀寫計點規則
    match /pointRules/{ruleId} {
      allow read, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // 允許用戶和管理員上傳和更新大頭照
    match /userAvatars/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId || 
                    get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // 允許用戶提交請假申請，並允許管理員審核
    match /leaves/{leaveId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      // 使用者可取消自己待審核的請假（僅 pending -> canceled）
      allow update: if (
        // 管理員可更新任意請假申請
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'
      ) || (
        // 本人可將自己提交且為 pending 的假單取消（更新為 canceled）
        request.auth.uid == resource.data.userId &&
        resource.data.status == 'pending' &&
        request.resource.data.status == 'canceled' &&
        request.resource.data.keys().hasOnly(['status', 'canceledAt'])
      );
      allow delete: if false;
    }
    
    // 允許用戶提交特殊勤務申請，並允許管理員審核
    match /specialDuties/{dutyId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      // 允許管理員更新特殊勤務申請狀態（審核功能）
      allow update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow delete: if false;
    }

    // 補打卡申請：使用者提交，管理員審核
    match /retroClockRequests/{requestId} {
      // 本人可提交申請；限制欄位與型別
      allow create: if request.auth != null &&
        request.auth.uid == request.resource.data.userId &&
        request.resource.data.keys().hasOnly([
          'userId','type','reason','locationName','requestedAt','targetTime','status'
        ]) &&
        request.resource.data.type in ['上班','下班','外出','抵達','離開'] &&
        (request.resource.data.reason == null || request.resource.data.reason is string) &&
        (request.resource.data.locationName == null || request.resource.data.locationName is string) &&
        request.resource.data.requestedAt is timestamp &&
        request.resource.data.targetTime is timestamp &&
        request.resource.data.status == 'pending';

      // 任何登入者可讀（供管理員審核、一般使用者查看自己的申請狀態）
      allow read: if request.auth != null;

      // 管理員、人事、高階主管可審核並更新狀態；限制可更新欄位與型別
      allow update: if isReviewer() &&
        request.resource.data.keys().hasOnly([
          'userId','type','reason','locationName','requestedAt','targetTime','status','reviewerId','reviewedAt'
        ]) &&
        request.resource.data.type in ['上班','下班','外出','抵達','離開'] &&
        (request.resource.data.reason == null || request.resource.data.reason is string) &&
        (request.resource.data.locationName == null || request.resource.data.locationName is string) &&
        request.resource.data.requestedAt is timestamp &&
        request.resource.data.targetTime is timestamp &&
        request.resource.data.status in ['approved','rejected','pending'] &&
        (request.resource.data.reviewerId == null || request.resource.data.reviewerId is string) &&
        (request.resource.data.reviewedAt == null || request.resource.data.reviewedAt is timestamp);

      // 禁止刪除
      allow delete: if false;
    }
    
    // 允許讀取所有人員狀態資訊（用於人員地圖和追蹤功能）
    match /userStatus/{userId} {
      allow read: if request.auth != null;
      allow create, update: if request.auth.uid == userId || 
                             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      allow delete: if false;
    }

    // 設定資料：general 與 group
    // general：任何登入者可讀，僅管理員可寫
    match /settings/general {
      allow read: if request.auth != null;
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // group：供群組頁載入指定可見成員名單
    // 管理員與初階主管可讀，僅管理員可寫
    match /settings/group {
      allow read: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' ||
                      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'junior_manager';
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // 位置設定：任何登入者可讀，僅管理員可寫
    match /settings/location {
      allow read: if request.auth != null;
      allow write: if isAdmin() &&
        request.resource.data.keys().hasOnly([
          'companyLat','companyLng','companyRadius','markAbnormalLocation','otherLocations','updatedAt'
        ]) &&
        (request.resource.data.companyLat == null || request.resource.data.companyLat is number) &&
        (request.resource.data.companyLng == null || request.resource.data.companyLng is number) &&
        (request.resource.data.companyRadius == null || request.resource.data.companyRadius is number) &&
        (request.resource.data.markAbnormalLocation == null || request.resource.data.markAbnormalLocation is bool) &&
        (request.resource.data.otherLocations == null || request.resource.data.otherLocations is list) &&
        (request.resource.data.updatedAt == null || request.resource.data.updatedAt is timestamp);
    }
  }
}